imports:
    - { resource: parameters_default.yml }
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    translator:      { fallback: %fallback_locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enabled: true, enable_annotations: false }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    form:
        resources: [ 'SrmWebsiteBundle::form.html.twig' ]

assetic:
    debug: %kernel.debug%
    use_controller: false
    filters:
        cssrewrite: ~

doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        #naming_strategy: doctrine.orm.naming_strategy.underscore

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Srm\UserBundle\Entity\User
    service:
        mailer: fos_user.mailer.default
    resetting:
        email:
            from_email:
                address:        contact@verseo-consulting.com
                sender_name:    Changement de mot de passe Verseo SRM
                #template: SrmUserBundle:User:resetting.email.html.twig


swiftmailer:
    transport:  smtp
    encryption: ssl
    auth_mode:  login
    host:       ssl0.ovh.net
    username:   'rachid.amyal@verseo-consulting.com'
    password:   verseo


services:
    userrepository:
        class: Srm\UserBundle\Repository
        factory_service: doctrine.orm.entity_manager
        factory_method: getRepository
        arguments:
            - Srm\UserBundle\Entity\User

    srm_login_success_handler:
        class:  Srm\UserBundle\Component\Authentication\Handler\LoginSuccessHandler
        arguments:  ["@router","@security.context","@userrepository"]
        tags:
            - { name: 'monolog.logger', channel: 'security' }